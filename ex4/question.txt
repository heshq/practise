三门问题，也叫 Monty Hall Problem。说的是美国80年代的一个电视节目，叫做 Let's Make a Deal ： http://en.wikipedia.org/wiki/Let%27s_Make_a_Deal 。

在节目的一个环节里，参赛者要面对三个门。主持人 Monty Hall 会告诉参赛者，三扇门中有两扇背后是一只羊，一扇背后有一辆车。只要参赛者猜中车在哪扇门里，就能把车开走。
当参赛者选出一扇门A后，Monty Hall 会在没选中的两扇门中打开一扇门B，B门后面一定是一只羊（因为 Monty Hall 事先知道门里的情况）。然后 Monty Hall 会问参赛者，要不要改变自己的选择？如果参赛者表示不换，那么门A就是他的最终选择；如果要换，那么只能换成门C。

那么问题来了：参赛者选换、选不换、扔个硬币决定，这三种做法，赢得汽车的概率分别是多少？








因为人类计算概率实际上是非常容易算错的，所以用程序模拟大规模实验，尽可能排除一切概率假定，可以对概率计算进行最靠谱的检验。
参考答案的代码里，唯一的概率假定是：当面临N项选择时，选择其中任一项的概率是1/N。其他内容都是要确保整个模拟过程严格符合题设，因为任何偏差和假定的概率都有可能影响到计算结果。
另外，怎样把这个节目的过程对象化，同时要保证代码清晰可读，也是这题的一个主要目的。

关于答案，直觉上，不管参赛者换或是不换，都有50%的可能性，因为未开启的两个门中，哪一个有大奖的概率都是50%。但是这个概率假设是错误的。
当参赛者第一次做出选择时，选对的概率为1/3，这个概率并不随着主持人打开另一个门而变化（显然参赛者第一次就选中，与主持人打开另一个门的动作，是相互独立的）。
如果参赛者第一次选错了，那么他选择换门就一定会得到奖品。第一次选错的概率是 1 - 1/3 = 2/3，因此换门的参赛者有 2/3 的获胜几率。
参考答案的输出结果与上面计算相符。如果你的代码实验出不同的结果，那么说明你的模拟实验代码不够严谨。