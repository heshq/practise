1 Conditionally set or clear bits without branching
w ^= (-f ^ w) & m 
w = w ^ ( ( -f ^ w) & m)
a. when f = true  -->  w = w ^ ( w & m)
m\w  0  1
0    0  1
1    0  0   --> w &= ~m
b. when f = false -->  w = w ^ ( ~w & m)
m\w  0  1
0    0  1
1    1  1   --> w |= m

w = ( w & ~m) | ( -f & m)

2 Conditionally negate a value without branching

result = ( fDontNegate ^ ( fDontNegate - 1)) * v;//negate when false

r = (v ^ -fNegate) + fNegate;//negate when true